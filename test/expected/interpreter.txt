┌ Case jpamb.cases.Simple.assertBoolean:(false) -> assertion error
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.assertBoolean:(Z)V' '(false)'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.assertBoolean:(Z)V Input(values=(Value(type=Boolean(), value=False),))
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.assertBoolean:(Z)V' '(false)'
│ Expected 'assertion error' and got 'jpamb.cases.Simple.assertBoolean:(Z)V Input(values=(Value(type=Boolean(), value=False),))'
└ Case jpamb.cases.Simple.assertBoolean:(false) -> assertion error
┌ Case jpamb.cases.Simple.assertBoolean:(true) -> ok
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.assertBoolean:(Z)V' '(true)'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.assertBoolean:(Z)V Input(values=(Value(type=Boolean(), value=True),))
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.assertBoolean:(Z)V' '(true)'
│ Expected 'ok' and got 'jpamb.cases.Simple.assertBoolean:(Z)V Input(values=(Value(type=Boolean(), value=True),))'
└ Case jpamb.cases.Simple.assertBoolean:(true) -> ok
┌ Case jpamb.cases.Simple.assertFalse:() -> assertion error
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.assertFalse:()V' '()'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.assertFalse:()V Input(values=())
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.assertFalse:()V' '()'
│ Expected 'assertion error' and got 'jpamb.cases.Simple.assertFalse:()V Input(values=())'
└ Case jpamb.cases.Simple.assertFalse:() -> assertion error
┌ Case jpamb.cases.Simple.assertInteger:(0) -> assertion error
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.assertInteger:(I)V' '(0)'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.assertInteger:(I)V Input(values=(Value(type=Int(), value=0),))
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.assertInteger:(I)V' '(0)'
│ Expected 'assertion error' and got 'jpamb.cases.Simple.assertInteger:(I)V Input(values=(Value(type=Int(), value=0),))'
└ Case jpamb.cases.Simple.assertInteger:(0) -> assertion error
┌ Case jpamb.cases.Simple.assertInteger:(1) -> ok
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.assertInteger:(I)V' '(1)'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.assertInteger:(I)V Input(values=(Value(type=Int(), value=1),))
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.assertInteger:(I)V' '(1)'
│ Expected 'ok' and got 'jpamb.cases.Simple.assertInteger:(I)V Input(values=(Value(type=Int(), value=1),))'
└ Case jpamb.cases.Simple.assertInteger:(1) -> ok
┌ Case jpamb.cases.Simple.assertPositive:(-1) -> assertion error
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.assertPositive:(I)V' '(-1)'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.assertPositive:(I)V Input(values=(Value(type=Int(), value=-1),))
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.assertPositive:(I)V' '(-1)'
│ Expected 'assertion error' and got 'jpamb.cases.Simple.assertPositive:(I)V Input(values=(Value(type=Int(), value=-1),))'
└ Case jpamb.cases.Simple.assertPositive:(-1) -> assertion error
┌ Case jpamb.cases.Simple.assertPositive:(1) -> ok
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.assertPositive:(I)V' '(1)'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.assertPositive:(I)V Input(values=(Value(type=Int(), value=1),))
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.assertPositive:(I)V' '(1)'
│ Expected 'ok' and got 'jpamb.cases.Simple.assertPositive:(I)V Input(values=(Value(type=Int(), value=1),))'
└ Case jpamb.cases.Simple.assertPositive:(1) -> ok
┌ Case jpamb.cases.Simple.checkBeforeAssert:(-1) -> assertion error
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.checkBeforeAssert:(I)V' '(-1)'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.checkBeforeAssert:(I)V Input(values=(Value(type=Int(), value=-1),))
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.checkBeforeAssert:(I)V' '(-1)'
│ Expected 'assertion error' and got 'jpamb.cases.Simple.checkBeforeAssert:(I)V Input(values=(Value(type=Int(), value=-1),))'
└ Case jpamb.cases.Simple.checkBeforeAssert:(-1) -> assertion error
┌ Case jpamb.cases.Simple.checkBeforeAssert:(0) -> ok
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.checkBeforeAssert:(I)V' '(0)'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.checkBeforeAssert:(I)V Input(values=(Value(type=Int(), value=0),))
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.checkBeforeAssert:(I)V' '(0)'
│ Expected 'ok' and got 'jpamb.cases.Simple.checkBeforeAssert:(I)V Input(values=(Value(type=Int(), value=0),))'
└ Case jpamb.cases.Simple.checkBeforeAssert:(0) -> ok
┌ Case jpamb.cases.Simple.checkBeforeDivideByN2:(0) -> ok
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.checkBeforeDivideByN2:(I)I' '(0)'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.checkBeforeDivideByN2:(I)I Input(values=(Value(type=Int(), value=0),))
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.checkBeforeDivideByN2:(I)I' '(0)'
│ Expected 'ok' and got 'jpamb.cases.Simple.checkBeforeDivideByN2:(I)I Input(values=(Value(type=Int(), value=0),))'
└ Case jpamb.cases.Simple.checkBeforeDivideByN2:(0) -> ok
┌ Case jpamb.cases.Simple.checkBeforeDivideByN2:(1) -> ok
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.checkBeforeDivideByN2:(I)I' '(1)'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.checkBeforeDivideByN2:(I)I Input(values=(Value(type=Int(), value=1),))
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.checkBeforeDivideByN2:(I)I' '(1)'
│ Expected 'ok' and got 'jpamb.cases.Simple.checkBeforeDivideByN2:(I)I Input(values=(Value(type=Int(), value=1),))'
└ Case jpamb.cases.Simple.checkBeforeDivideByN2:(1) -> ok
┌ Case jpamb.cases.Simple.checkBeforeDivideByN:(0) -> assertion error
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.checkBeforeDivideByN:(I)I' '(0)'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.checkBeforeDivideByN:(I)I Input(values=(Value(type=Int(), value=0),))
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.checkBeforeDivideByN:(I)I' '(0)'
│ Expected 'assertion error' and got 'jpamb.cases.Simple.checkBeforeDivideByN:(I)I Input(values=(Value(type=Int(), value=0),))'
└ Case jpamb.cases.Simple.checkBeforeDivideByN:(0) -> assertion error
┌ Case jpamb.cases.Simple.checkBeforeDivideByN:(1) -> ok
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.checkBeforeDivideByN:(I)I' '(1)'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.checkBeforeDivideByN:(I)I Input(values=(Value(type=Int(), value=1),))
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.checkBeforeDivideByN:(I)I' '(1)'
│ Expected 'ok' and got 'jpamb.cases.Simple.checkBeforeDivideByN:(I)I Input(values=(Value(type=Int(), value=1),))'
└ Case jpamb.cases.Simple.checkBeforeDivideByN:(1) -> ok
┌ Case jpamb.cases.Simple.divideByN:(0) -> divide by zero
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.divideByN:(I)I' '(0)'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.divideByN:(I)I Input(values=(Value(type=Int(), value=0),))
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.divideByN:(I)I' '(0)'
│ Expected 'divide by zero' and got 'jpamb.cases.Simple.divideByN:(I)I Input(values=(Value(type=Int(), value=0),))'
└ Case jpamb.cases.Simple.divideByN:(0) -> divide by zero
┌ Case jpamb.cases.Simple.divideByN:(1) -> ok
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.divideByN:(I)I' '(1)'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.divideByN:(I)I Input(values=(Value(type=Int(), value=1),))
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.divideByN:(I)I' '(1)'
│ Expected 'ok' and got 'jpamb.cases.Simple.divideByN:(I)I Input(values=(Value(type=Int(), value=1),))'
└ Case jpamb.cases.Simple.divideByN:(1) -> ok
┌ Case jpamb.cases.Simple.divideByNMinus10054203:(0) -> ok
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.divideByNMinus10054203:(I)I' '(0)'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.divideByNMinus10054203:(I)I Input(values=(Value(type=Int(), value=0),))
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.divideByNMinus10054203:(I)I' '(0)'
│ Expected 'ok' and got 'jpamb.cases.Simple.divideByNMinus10054203:(I)I Input(values=(Value(type=Int(), value=0),))'
└ Case jpamb.cases.Simple.divideByNMinus10054203:(0) -> ok
┌ Case jpamb.cases.Simple.divideByNMinus10054203:(10054203) -> divide by zero
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.divideByNMinus10054203:(I)I' '(10054203)'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.divideByNMinus10054203:(I)I Input(values=(Value(type=Int(), value=10054203),))
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.divideByNMinus10054203:(I)I' '(10054203)'
│ Expected 'divide by zero' and got 'jpamb.cases.Simple.divideByNMinus10054203:(I)I Input(values=(Value(type=Int(), value=10054203),))'
└ Case jpamb.cases.Simple.divideByNMinus10054203:(10054203) -> divide by zero
┌ Case jpamb.cases.Simple.divideByZero:() -> divide by zero
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.divideByZero:()I' '()'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.divideByZero:()I Input(values=())
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.divideByZero:()I' '()'
│ Expected 'divide by zero' and got 'jpamb.cases.Simple.divideByZero:()I Input(values=())'
└ Case jpamb.cases.Simple.divideByZero:() -> divide by zero
┌ Case jpamb.cases.Simple.divideZeroByZero:(0, 0) -> divide by zero
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.divideZeroByZero:(II)I' '(0, 0)'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.divideZeroByZero:(II)I Input(values=(Value(type=Int(), value=0), Value(type=Int(), value=0)))
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.divideZeroByZero:(II)I' '(0, 0)'
│ Expected 'divide by zero' and got 'jpamb.cases.Simple.divideZeroByZero:(II)I Input(values=(Value(type=Int(), value=0), Value(type=Int(), value=0)))'
└ Case jpamb.cases.Simple.divideZeroByZero:(0, 0) -> divide by zero
┌ Case jpamb.cases.Simple.divideZeroByZero:(0, 1) -> ok
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.divideZeroByZero:(II)I' '(0, 1)'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.divideZeroByZero:(II)I Input(values=(Value(type=Int(), value=0), Value(type=Int(), value=1)))
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.divideZeroByZero:(II)I' '(0, 1)'
│ Expected 'ok' and got 'jpamb.cases.Simple.divideZeroByZero:(II)I Input(values=(Value(type=Int(), value=0), Value(type=Int(), value=1)))'
└ Case jpamb.cases.Simple.divideZeroByZero:(0, 1) -> ok
┌ Case jpamb.cases.Simple.earlyReturn:() -> ok
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.earlyReturn:()I' '()'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.earlyReturn:()I Input(values=())
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.earlyReturn:()I' '()'
│ Expected 'ok' and got 'jpamb.cases.Simple.earlyReturn:()I Input(values=())'
└ Case jpamb.cases.Simple.earlyReturn:() -> ok
┌ Case jpamb.cases.Simple.justReturn:() -> ok
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.justReturn:()I' '()'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.justReturn:()I Input(values=())
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.justReturn:()I' '()'
│ Expected 'ok' and got 'jpamb.cases.Simple.justReturn:()I Input(values=())'
└ Case jpamb.cases.Simple.justReturn:() -> ok
┌ Case jpamb.cases.Simple.justReturnNothing:() -> ok
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.justReturnNothing:()V' '()'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.justReturnNothing:()V Input(values=())
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.justReturnNothing:()V' '()'
│ Expected 'ok' and got 'jpamb.cases.Simple.justReturnNothing:()V Input(values=())'
└ Case jpamb.cases.Simple.justReturnNothing:() -> ok
┌ Case jpamb.cases.Simple.multiError:(false) -> assertion error
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.multiError:(Z)I' '(false)'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.multiError:(Z)I Input(values=(Value(type=Boolean(), value=False),))
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.multiError:(Z)I' '(false)'
│ Expected 'assertion error' and got 'jpamb.cases.Simple.multiError:(Z)I Input(values=(Value(type=Boolean(), value=False),))'
└ Case jpamb.cases.Simple.multiError:(false) -> assertion error
┌ Case jpamb.cases.Simple.multiError:(true) -> divide by zero
│┌ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.multiError:(Z)I' '(true)'
││┌ Stderr
││└ Stderr
││┌ Stdout
│││ jpamb.cases.Simple.multiError:(Z)I Input(values=(Value(type=Boolean(), value=True),))
││└ Stdout
│└ Run .venv/bin/python3 solutions/interpreter.py 'jpamb.cases.Simple.multiError:(Z)I' '(true)'
│ Expected 'divide by zero' and got 'jpamb.cases.Simple.multiError:(Z)I Input(values=(Value(type=Boolean(), value=True),))'
└ Case jpamb.cases.Simple.multiError:(true) -> divide by zero
Total 0/25
